// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PFM_API.Database;

#nullable disable

namespace PFM_API.Migrations
{
    [DbContext(typeof(PFMDbContext))]
    partial class PFMDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PFM_API.Database.Entities.CategoryEntity", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("ParentCode")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.HasKey("Code");

                    b.ToTable("category", (string)null);
                });

            modelBuilder.Entity("PFM_API.Database.Entities.SplitTransactionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<string>("Catcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TransactionEntityId")
                        .HasColumnType("text");

                    b.Property<string>("TransactionId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TransactionEntityId");

                    b.ToTable("transactionSplits", (string)null);
                });

            modelBuilder.Entity("PFM_API.Database.Entities.TransactionEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<string>("BeneficiaryName")
                        .HasColumnType("text");

                    b.Property<string>("CatCode")
                        .HasColumnType("text");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<int?>("Mcc")
                        .HasColumnType("integer");

                    b.Property<string>("categoryCode")
                        .HasColumnType("character varying(16)");

                    b.HasKey("Id");

                    b.HasIndex("categoryCode");

                    b.ToTable("transaction", (string)null);
                });

            modelBuilder.Entity("PFM_API.Database.Entities.SplitTransactionEntity", b =>
                {
                    b.HasOne("PFM_API.Database.Entities.TransactionEntity", null)
                        .WithMany("SplitTransactions")
                        .HasForeignKey("TransactionEntityId");
                });

            modelBuilder.Entity("PFM_API.Database.Entities.TransactionEntity", b =>
                {
                    b.HasOne("PFM_API.Database.Entities.CategoryEntity", "category")
                        .WithMany()
                        .HasForeignKey("categoryCode");

                    b.Navigation("category");
                });

            modelBuilder.Entity("PFM_API.Database.Entities.TransactionEntity", b =>
                {
                    b.Navigation("SplitTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
